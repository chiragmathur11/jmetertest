name: main

on:   
  push:
    branches: [ "main" ]
  #pull_request:
  # branches: [ "main" ]
jobs:
  a:
    name: a
    runs-on: ubuntu-latest    
    steps:
      - uses: actions/checkout@v4
      - name: Create sanity directory
        run: mkdir sanity
      - name: Sanity
        uses: QAInsights/PerfAction@v5.6.2
        with:
          # JMeter test plan to execute
          test-plan-path: './firstlatestjmeterjenkins.jmx'
          # Where to store the results e.g., result.csv
          results-file: ./sanity/result.jtl
          args: "-e -o ./sanity/html"
      - id: set
        run: |
          echo "::set-output name=run_job_b::yes"
      - name: Upload Results
        uses: actions/upload-artifact@v3
        with:
          name: sanity-results
          path: sanity/result.jtl
          if-no-files-found: error
      - name: Upload HTML Reports
        uses: actions/upload-artifact@v3
        with:
          name: sanity-results
          path: sanity/result.jtl
          if-no-files-found: error
      - name: conditioncheck
        run: |
              awk -F "," 'NR>1{print $8}' sanity/result.jtl >> abc.txt
              TEXT=`cat abc.txt | grep false | wc -l`
              echo "This is $TEXT" 
              if [ $TEXT == 0 ]; then
              echo "This is first"
              echo "::set-output name=run_job_b::yes"
              elif [ $TEXT == 1  ]; then
              echo "This is second"
              echo "::set-output name=run_job_b::yes"
              elif [ $TEXT == 2  ]; then
              echo "This is third"
              echo "::set-output name=run_job_b::yes"
              else
              echo "Sanity Failed"
              exit 1
              fi
             
    outputs:
      run_job_b: ${{ steps.set.outputs.run_job_b }}

  b:
     name: b
     runs-on: ubuntu-latest
     needs:
       - a
     if: needs.a.outputs.run_job_b == 'yes'
     steps:
      - uses: actions/checkout@v4
      - name: Create load test directory
        run: mkdir loadreport
      - name: LoadTest
        uses: QAInsights/PerfAction@v5.6.2
        with:
          # JMeter test plan to execute
          test-plan-path: './firstlatestjmeterjenkins.jmx'
          # Where to store the results e.g., result.csv
          results-file: ./loadreport/result1.jtl
          args: "-e -o ./loadreport/html"
     
      - name: Upload Results
        uses: actions/upload-artifact@v3
        with:
          name: LoadTest-results
          path: loadreport/result1.jtl
          if-no-files-found: error
      - name: Upload HTML Reports
        uses: actions/upload-artifact@v3
        with:
          name: LoadTest-results
          path: loadreport/result1.jtl
          if-no-files-found: error
