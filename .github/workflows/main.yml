name: main
on:        
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
   inputs: 
      workflow2_name:
        description: 'Workflow2 Name for Triggering'
        required: true
        default: 'Workflow2'
      
      workflow2_github_account:
        description: 'GitHub Account Owner'
        required: true
        default: 'chiragmathur11'
      
      workflow2_repo_github:
        description: 'GitHub Repository Name'
        required: true
        default: 'jmetertest'
jobs:
  a:
    name: a
    runs-on: ubuntu-latest
    env: 
      pat_token: ${{ secrets.Workflow2_PAT_TOKEN_GITHUB }}
      payload_Baseline_Number: "BSL_001"
      payload_Baseline_Revision: "zsfdgsdbgngffdwdx1dxvv2"
      
    steps:
      - uses: actions/checkout@v4
      - name: Create sanity directory
        run: mkdir sanity
      - name: Sanity
        uses: QAInsights/PerfAction@v5.6.2
        with:
          # JMeter test plan to execute
          test-plan-path: './firstlatestjmeterjenkins.jmx'
          # Where to store the results e.g., result.csv
          results-file: ./sanity/result.jtl
          args: "-e -o ./sanity/html"
      - id: set
        run: |
          echo "::set-output name=run_job_b::yes"
      - name: Upload Results
        uses: actions/upload-artifact@v3
        with:
          name: jmeter-resultss
          path: sanity/result.jtl
          if-no-files-found: error
      - name: Upload HTML Reports
        uses: actions/upload-artifact@v3
        with:
          name: jmeter-resultss
          path: sanity/result.jtl
          if-no-files-found: error
      - name: conditioncheck
        run: |
              awk -F "," 'NR>1{print $8}' sanity/result.jtl >> abc.txt
              TEXT=`cat abc.txt | grep false | wc -l`
              echo "This is $TEXT" 
              if [ ${TEXT} > 1 ]; then
              {
                 echo "Test done"
                 echo "::set-output name=run_job_b::yes"
              }
              else
              {
                echo "Test Failed"
                exit 1
                #echo "::set-output name=run_job_b::no"
              }
              fi
    outputs:
      run_job_b: ${{ steps.set.outputs.run_job_b }}
  b:
     name: b
     runs-on: ubuntu-latest
     needs:
       - a
     if: needs.a.outputs.run_job_b == 'yes'
    #if: needs.a.result == 'success'
     steps:
      - run: echo "B"
   
      - name: Trigger the Workflow
        run: |
         cd "$GITHUB_WORKSPACE/"
         python $GITHUB_WORKSPACE/workflow_trigger.py ${{ env.pat_token }}  ${{ github.event.inputs.workflow2_github_account}}  ${{ github.event.inputs.workflow2_repo_github}} ${{ github.event.inputs.workflow2_name}} ${{ env.payload_Baseline_Number }} ${{ env.payload_Baseline_Revision }}
