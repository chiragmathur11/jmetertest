# This is a basic workflow to help you get started with Actions

name: Workflow2

# Controls when the workflow will run
on:
 repository_dispatch:
    types: [Workflow2]
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
   a:
  # This workflow contains a single job called "build"
   
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
       baselineTag: ${{ github.event.client_payload.baselinetag }}
       revision_number: ${{ github.event.client_payload.revision_number }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      - name: Create sanity directory
        run: mkdir sanity
      - name: Sanity
        uses: QAInsights/PerfAction@v5.6.2
        with:
          # JMeter test plan to execute
          test-plan-path: './firstlatestjmeterjenkins.jmx'
          # Where to store the results e.g., result.csv
          results-file: ./sanity/result.jtl
          args: "-e -o ./sanity/html"
      - id: set
        run: |
          echo "::set-output name=run_job_b::yes"
      - name: Upload Results
        uses: actions/upload-artifact@v3
        with:
          name: sanity-results
          path: sanity/result.jtl
          if-no-files-found: error
      - name: Upload HTML Reports
        uses: actions/upload-artifact@v3
        with:
          name: sanity-results
          path: sanity/result.jtl
          if-no-files-found: error
      - name: conditioncheck
        run: |
              awk -F "," 'NR>1{print $8}' sanity/result.jtl >> abc.txt
              TEXT=`cat abc.txt | grep true | wc -l`
              echo "This is $TEXT" 
              if [ ${TEXT} > 1 ]; then
              {
                 echo "Sanity Pass"
                 echo "::set-output name=run_job_b::yes"
              }
              else
              {
                echo "Sanity Failed"
                exit 1
              }
              fi
    outputs:
      run_job_b: ${{ steps.set.outputs.run_job_b }}
